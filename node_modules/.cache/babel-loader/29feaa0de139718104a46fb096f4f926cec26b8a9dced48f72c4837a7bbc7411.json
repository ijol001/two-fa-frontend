{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\authreactapp\\\\src\\\\Pages\\\\Auth\\\\UserLogin.js\",\n  _s = $RefreshSig$();\nimport { Alert, Box, Button, InputLabel, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserLogin = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState({\n    status: false,\n    msg: '',\n    type: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validation checks (you can customize these)\n    if (!formData.email || !formData.password) {\n      setError({\n        status: true,\n        msg: 'All fields are required',\n        type: 'error'\n      });\n      return;\n    }\n\n    // Your additional validation logic can go here...\n\n    console.log(formData);\n    setFormData({\n      email: '',\n      password: ''\n    }); // Resetting form values using state\n    setError({\n      status: true,\n      msg: 'Login is successful',\n      type: 'success'\n    });\n    setTimeout(() => {\n      navigate('/dashboard');\n    }, 4000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      sx: {\n        mt: 1\n      },\n      id: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: /*#__PURE__*/_jsxDEV(InputLabel, {\n          shrink: true,\n          style: {\n            fontSize: '14px' // Adjusted fontSize\n          },\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this),\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        label: /*#__PURE__*/_jsxDEV(InputLabel, {\n          shrink: true,\n          style: {\n            fontSize: '14px' // Adjusted fontSize\n          },\n          User: true,\n          Password: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this),\n        value: formData.password,\n        onChange: handleChange,\n        pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\",\n        title: \"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2,\n            px: 5\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/ResetPasswordEmail\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), error.status && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: error.type,\n        children: error.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UserLogin, \"4XDZHR3YaGO8VB9X/9K5MuYThPY=\", false, function () {\n  return [useNavigate];\n});\n_c = UserLogin;\nexport default UserLogin;\nvar _c;\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"names":["Alert","Box","Button","InputLabel","TextField","React","useState","NavLink","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UserLogin","_s","formData","setFormData","email","password","error","setError","status","msg","type","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","setTimeout","children","component","noValidate","sx","mt","id","onSubmit","margin","required","fullWidth","label","shrink","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onChange","User","Password","pattern","title","variant","mb","px","to","severity","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/authreactapp/src/Pages/Auth/UserLogin.js"],"sourcesContent":["import { Alert, Box, Button, InputLabel, TextField } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\n\r\nconst UserLogin = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [error, setError] = useState({\r\n    status: false,\r\n    msg: '',\r\n    type: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation checks (you can customize these)\r\n    if (!formData.email || !formData.password) {\r\n      setError({ status: true, msg: 'All fields are required', type: 'error' });\r\n      return;\r\n    }\r\n\r\n    // Your additional validation logic can go here...\r\n\r\n    console.log(formData);\r\n    setFormData({ email: '', password: '' }); // Resetting form values using state\r\n    setError({ status: true, msg: 'Login is successful', type: 'success' });\r\n\r\n    setTimeout(() => {\r\n      navigate('/dashboard');\r\n    }, 4000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box component='form' noValidate sx={{ mt: 1 }} id='login-form' onSubmit={handleSubmit}>\r\n        <TextField\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          id='email'\r\n          name='email'\r\n          label={\r\n            <InputLabel\r\n              shrink\r\n              style={{\r\n                fontSize: '14px', // Adjusted fontSize\r\n              }}\r\n            >\r\n              Email Address\r\n            </InputLabel>\r\n          }\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n        <TextField\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          id='password'\r\n          name='password'\r\n          type='password'\r\n          label={\r\n            <InputLabel\r\n              shrink\r\n              style={{\r\n                fontSize: '14px', // Adjusted fontSize\r\n              }}\r\n\r\n              User Password\r\n            />\r\n          }\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          pattern='(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}'\r\n          title='Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters'\r\n        />\r\n        <Box component='center'>\r\n          <Button type='submit' variant='contained' sx={{ mt: 3, mb: 2, px: 5 }}>\r\n            Login\r\n          </Button>\r\n          <br />\r\n          <NavLink to='/ResetPasswordEmail'>Forgot Password?</NavLink>\r\n        </Box>\r\n        {error.status && <Alert severity={error.type}>{error.msg}</Alert>}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}