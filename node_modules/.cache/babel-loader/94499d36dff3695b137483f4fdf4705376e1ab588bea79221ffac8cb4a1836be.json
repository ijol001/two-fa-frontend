{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\Project1\\\\authreactapp\\\\src\\\\Pages\\\\Auth\\\\ResetPass.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Grid, TextField, Alert, Box, Button } from '@mui/material';\nimport { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useResetPasswordMutation } from '../../services/authApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResetPass = () => {\n  _s();\n  const [ResetPassword, {\n    isLoading\n  }] = useResetPasswordMutation();\n  const {\n    id,\n    token\n  } = useParams();\n  const [error, setError] = useState({\n    status: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      password: data.get('password'),\n      password_confirmation: data.get('password_confirmation')\n    };\n    if (actualData.password && actualData.password_confirmation) {\n      if (actualData.password === actualData.password_confirmation) {\n        const res = await ResetPassword({\n          actualData,\n          id,\n          token\n        });\n        console.log(res);\n        if (res.data.status === \"success\") {\n          document.getElementById('reset-pass-form').reset();\n          setError({\n            status: true,\n            msg: \"Password changed successfully\",\n            type: 'success'\n          });\n          setTimeout(() => {\n            navigate('/LogReg');\n          }, 3000);\n        }\n        if (res.data.status === \"failed\") {\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: 'error'\n          });\n        }\n      } else {\n        setError({\n          status: true,\n          msg: \" New Password and Confirm New Password doesn't match !\",\n          type: 'error'\n        });\n      }\n    } else {\n      console.log(\"all fields are required\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      item: true,\n      lg: 4,\n      sm: 6,\n      sx: {\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 3,\n        borderRadius: 8,\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        xs: 10,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noVariable: true,\n          sx: {\n            mt: 1\n          },\n          id: \"reset-pass-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            label: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"password_confirmation\",\n            name: \"password_confirmation\",\n            type: \"password\",\n            label: \"Confirm New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2,\n                px: 5\n              },\n              children: \" Submit \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), error.status ? /*#__PURE__*/_jsxDEV(Alert, {\n            severity: error.type,\n            children: error.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 27\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(ResetPass, \"XLDoDcrUUHV5JoPJ5EYivMi01Us=\", false, function () {\n  return [useResetPasswordMutation, useParams, useNavigate];\n});\n_c = ResetPass;\nexport default ResetPass;\nvar _c;\n$RefreshReg$(_c, \"ResetPass\");","map":{"version":3,"names":["React","Grid","TextField","Alert","Box","Button","useState","useNavigate","useParams","useResetPasswordMutation","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPass","_s","ResetPassword","isLoading","id","token","error","setError","status","msg","type","navigate","handleSubmit","e","preventDefault","data","FormData","currentTarget","actualData","password","get","password_confirmation","res","console","log","document","getElementById","reset","setTimeout","message","children","container","justifyContent","item","lg","sm","sx","backgroundColor","display","flexDirection","alignItems","padding","borderRadius","margin","xs","fileName","_jsxFileName","lineNumber","columnNumber","component","noVariable","mt","onSubmit","required","fullWidth","name","label","textAlign","variant","mb","px","severity","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/Project1/authreactapp/src/Pages/Auth/ResetPass.js"],"sourcesContent":["import React from 'react'\r\nimport { Grid, TextField, Alert, Box, Button } from '@mui/material'\r\nimport { useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { useResetPasswordMutation } from '../../services/authApi'\r\n\r\nconst ResetPass = () => {\r\n\r\n  const [ResetPassword, { isLoading }] = useResetPasswordMutation()\r\n  const { id, token } = useParams()\r\n\r\n  const [error, setError] = useState({\r\n    status: false,\r\n    msg: \"\",\r\n    type: \"\"\r\n  })\r\n\r\n  const navigate = useNavigate()\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const actualData = {\r\n      password: data.get('password'),\r\n      password_confirmation: data.get('password_confirmation')\r\n    };\r\n\r\n    if (actualData.password && actualData.password_confirmation) {\r\n      if (actualData.password === actualData.password_confirmation) {\r\n\r\n        const res = await ResetPassword({ actualData, id, token })\r\n        console.log(res);\r\n        if (res.data.status === \"success\") {\r\n          document.getElementById('reset-pass-form').reset();\r\n          setError({ status: true, msg:\"Password changed successfully\", type: 'success' })\r\n          setTimeout(() => {\r\n            navigate('/LogReg')\r\n          }, 3000);\r\n        }\r\n        if (res.data.status === \"failed\") {\r\n          setError({ status: true, msg: res.data.message, type: 'error' })\r\n        }\r\n      }\r\n      else {\r\n        setError({ status: true, msg: \" New Password and Confirm New Password doesn't match !\", type: 'error' })\r\n      }\r\n    } else {\r\n      console.log(\"all fields are required\");\r\n    }\r\n  };\r\n\r\n  return <>\r\n    <Grid container justifyContent='center'\r\n      item\r\n      lg={4}\r\n      sm={6}\r\n      sx={{\r\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 3,\r\n        borderRadius: 8,\r\n        margin: 'auto' }}>\r\n      <Grid item sm={6} xs={10}>\r\n        <h1 >Reset Password</h1>\r\n        <Box component='form' noVariable sx={{ mt: 1 }} id='reset-pass-form' onSubmit={handleSubmit}>\r\n          <TextField margin='normal' required fullWidth id='password' name='password' type='password' label='New Password' />\r\n          <TextField margin='normal' required fullWidth id='password_confirmation' name='password_confirmation' type='password' label='Confirm New Password' />\r\n          <Box textAlign='center'>\r\n            <Button type='submit' variant='contained' sx={{ mt: 3, mb: 2, px: 5 }}> Submit </Button>\r\n          </Box>\r\n          {error.status ? <Alert severity={error.type}>{error.msg}</Alert> : ''}\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  </>;\r\n}\r\n\r\nexport default ResetPass;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}