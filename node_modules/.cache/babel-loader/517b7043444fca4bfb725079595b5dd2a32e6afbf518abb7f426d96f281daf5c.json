{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\Project_2FA\\\\authreactapp\\\\src\\\\Pages\\\\Auth\\\\UserReg.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Grid, CircularProgress, Checkbox, Button, Alert, TextField, InputAdornment, IconButton, Paper } from '@mui/material';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useUserRegMutation, useVerifyOTPMutation } from '../../services/authApi';\nimport { storeToken } from '../../services/LocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserReg = () => {\n  _s();\n  const Refresh = () => {\n    window.location.reload();\n  };\n  const [authid, setAuthId] = useState(null);\n  const [error, setError] = useState({\n    status: false,\n    msg: '',\n    type: ''\n  });\n  useEffect(() => {\n    if (error.status) {\n      const timer = setTimeout(() => {\n        setError(prevError => ({\n          ...prevError,\n          status: false\n        }));\n      }, 3000); // Adjust the timeout duration as needed (e.g., 3000ms = 3 seconds)\n\n      // Cleanup the timer on component unmount\n      return () => clearTimeout(timer);\n    }\n  }, [error.status]);\n  const navigate = useNavigate();\n  const [userReg] = useUserRegMutation();\n  const [verifyOTP, {\n    isLoading\n  }] = useVerifyOTPMutation();\n  const [showPassword, setShowPassword] = useState(false);\n  const handlePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\n  const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{6,}$/;\n  const handleSendOTP = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      first_name: data.get('first_name'),\n      last_name: data.get('last_name'),\n      email: data.get('email'),\n      password: data.get('password'),\n      password_confirmation: data.get('password_confirmation')\n    };\n    if (actualData.first_name && actualData.last_name && actualData.email && actualData.password && actualData.password_confirmation) {\n      if (!emailRegex.test(actualData.email)) {\n        setError({\n          status: true,\n          msg: \"Please enter a valid email address\",\n          type: 'error'\n        });\n        return;\n      }\n      if (!passwordRegex.test(actualData.password)) {\n        setError({\n          status: true,\n          msg: \"Password must be at least 6 characters long and contain at least one special character.\",\n          type: 'error'\n        });\n        return;\n      }\n      if (actualData.password === actualData.password_confirmation) {\n        const res = await userReg(actualData);\n        console.log(res);\n        if (res.data.status === 'success') {\n          storeToken(res.data.token);\n          setAuthId(res.data.authid);\n          setTimeout(() => {\n            navigate('/');\n            window.location.reload();\n          }, 3000);\n        }\n        if (res.data.status === 'failed') {\n          console.error('error during registration', error);\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: 'error'\n          });\n        }\n      } else {\n        setError({\n          status: true,\n          msg: \"Password and Confirm Password don't match!\",\n          type: 'error'\n        });\n      }\n    } else {\n      setError({\n        status: true,\n        msg: 'All fields are required',\n        type: 'error'\n      });\n    }\n  };\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      otp: data.get('otp'),\n      id: authid\n    };\n    if (actualData.otp && actualData.id) {\n      try {\n        const res = await verifyOTP(actualData);\n        // console.log('Response from verifyOTP:', res);\n        if (res.data.status === \"success\") {\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: 'success'\n          });\n          setTimeout(() => {\n            navigate('/');\n            window.location.reload();\n          }, 4000);\n        } else {\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: 'error'\n          });\n        }\n      } catch (error) {\n        console.error('Error during OTP verification:', error);\n        setError({\n          status: true,\n          msg: \"Error occurred during OTP verification\",\n          type: 'error'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: 'navy'\n      },\n      children: \"Welcome!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), authid === null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        noValidate: true,\n        sx: {\n          mt: 0,\n          p: 1,\n          maxWidth: '400px',\n          margin: 'auto'\n        },\n        id: \"reg-form\",\n        onSubmit: handleSendOTP,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"first_name\",\n              name: \"first_name\",\n              label: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"last_name\",\n              name: \"last_name\",\n              label: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          name: \"email\",\n          label: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"password\",\n          name: \"password\",\n          type: showPassword ? 'text' : 'password',\n          label: \"Password\",\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handlePasswordVisibility,\n                edge: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 39\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"password_confirmation\",\n          name: \"password_confirmation\",\n          type: \"password\",\n          label: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            sx: {\n              mt: 1,\n              px: 5,\n              backgroundColor: 'white',\n              color: 'navy',\n              fontWeight: '550'\n            },\n            children: \"get OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            onClick: Refresh,\n            style: {\n              color: 'blue',\n              fontStyle: 'normal'\n            },\n            children: \"Already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), error.status && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: error.type,\n          sx: {\n            textAlign: 'center'\n          },\n          children: error.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        noValidate: true,\n        id: \"verify-otp-form\",\n        onSubmit: handleVerifyOTP,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"otp\",\n          name: \"otp\",\n          required: true,\n          fullWidth: true,\n          margin: \"normal\",\n          label: \"Enter OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            m: 2,\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: [isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"info\",\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), error.status && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: error.type,\n            sx: {\n              textAlign: 'center'\n            },\n            children: error.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(UserReg, \"3ZmuK0wC1VCxhNLuRbj0sJ97XkQ=\", false, function () {\n  return [useNavigate, useUserRegMutation, useVerifyOTPMutation];\n});\n_c = UserReg;\nexport default UserReg;\nvar _c;\n$RefreshReg$(_c, \"UserReg\");","map":{"version":3,"names":["React","Box","Grid","CircularProgress","Checkbox","Button","Alert","TextField","InputAdornment","IconButton","Paper","VisibilityIcon","VisibilityOffIcon","useState","useEffect","NavLink","useNavigate","useUserRegMutation","useVerifyOTPMutation","storeToken","jsxDEV","_jsxDEV","Fragment","_Fragment","UserReg","_s","Refresh","window","location","reload","authid","setAuthId","error","setError","status","msg","type","timer","setTimeout","prevError","clearTimeout","navigate","userReg","verifyOTP","isLoading","showPassword","setShowPassword","handlePasswordVisibility","emailRegex","passwordRegex","handleSendOTP","e","preventDefault","data","FormData","currentTarget","actualData","first_name","get","last_name","email","password","password_confirmation","test","res","console","log","token","message","handleVerifyOTP","otp","id","children","style","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","component","noValidate","sx","mt","p","maxWidth","margin","onSubmit","container","spacing","item","xs","required","fullWidth","name","label","InputProps","endAdornment","position","onClick","edge","variant","px","backgroundColor","fontWeight","fontStyle","severity","display","justifyContent","m","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/Project_2FA/authreactapp/src/Pages/Auth/UserReg.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, Grid, CircularProgress, Checkbox, Button, Alert, TextField, InputAdornment, IconButton, Paper } from '@mui/material';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport { useState, useEffect } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { useUserRegMutation, useVerifyOTPMutation } from '../../services/authApi';\r\nimport { storeToken } from '../../services/LocalStorage';\r\n\r\n\r\nconst UserReg = () => {\r\n  const Refresh = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const [authid, setAuthId] = useState(null)\r\n  const [error, setError] = useState({\r\n    status: false,\r\n    msg: '',\r\n    type: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (error.status) {\r\n      const timer = setTimeout(() => {\r\n        setError(prevError => ({ ...prevError, status: false }));\r\n      }, 3000); // Adjust the timeout duration as needed (e.g., 3000ms = 3 seconds)\r\n      \r\n      // Cleanup the timer on component unmount\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error.status]);\r\n  \r\n\r\n  const navigate = useNavigate();\r\n  const [userReg] = useUserRegMutation();\r\n  const [verifyOTP, { isLoading }] = useVerifyOTPMutation();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handlePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\r\n  const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{6,}$/;\r\n\r\n  const handleSendOTP = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const actualData = {\r\n      first_name: data.get('first_name'),\r\n      last_name: data.get('last_name'),\r\n      email: data.get('email'),\r\n      password: data.get('password'),\r\n      password_confirmation: data.get('password_confirmation'),\r\n    };\r\n\r\n    if (actualData.first_name && actualData.last_name && actualData.email && actualData.password && actualData.password_confirmation) {\r\n      if (!emailRegex.test(actualData.email)) {\r\n        setError({ status: true, msg: \"Please enter a valid email address\", type: 'error' });\r\n        return;\r\n      }\r\n      if (!passwordRegex.test(actualData.password)) {\r\n        setError({ status: true, msg: \"Password must be at least 6 characters long and contain at least one special character.\", type: 'error' });\r\n        return;\r\n      }\r\n      if (actualData.password === actualData.password_confirmation) {\r\n        const res = await userReg(actualData);\r\n        console.log(res);\r\n        if (res.data.status === 'success') {\r\n          storeToken(res.data.token);\r\n          setAuthId(res.data.authid);\r\n          setTimeout(() => {\r\n            navigate('/');\r\n            window.location.reload();\r\n          }, 3000);\r\n        }\r\n\r\n        if (res.data.status === 'failed') {\r\n          console.error('error during registration', error);\r\n          setError({ status: true, msg: res.data.message, type: 'error' });\r\n        }\r\n      }\r\n      else {\r\n        setError({ status: true, msg: \"Password and Confirm Password don't match!\", type: 'error' });\r\n      }\r\n    } else {\r\n      setError({ status: true, msg: 'All fields are required', type: 'error' });\r\n    }\r\n\r\n\r\n  };\r\n  const handleVerifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const actualData = {\r\n      otp: data.get('otp'),\r\n      id: authid\r\n    };\r\n\r\n    if (actualData.otp && actualData.id) {\r\n      try {\r\n        const res = await verifyOTP(actualData);\r\n        // console.log('Response from verifyOTP:', res);\r\n        if (res.data.status === \"success\") {\r\n          setError({ status: true, msg: res.data.message, type: 'success' });\r\n          setTimeout(() => {\r\n            navigate('/');\r\n            window.location.reload();\r\n          },4000);\r\n        } else {\r\n          setError({ status: true, msg: res.data.message, type: 'error' });\r\n        }\r\n      }\r\n      catch (error) {\r\n        console.error('Error during OTP verification:', error);\r\n        setError({ status: true, msg: \"Error occurred during OTP verification\", type: 'error' });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: 'center', color: 'navy' }}>Welcome!!!</h2>\r\n\r\n      {authid === null ?\r\n        <>\r\n          <Box component=\"form\" noValidate sx={{ mt: 0, p: 1, maxWidth: '400px', margin: 'auto' }} id=\"reg-form\" onSubmit={handleSendOTP}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={6}>\r\n                <TextField margin=\"normal\" required fullWidth id=\"first_name\" name=\"first_name\" label=\"First Name\" />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField margin=\"normal\" required fullWidth id=\"last_name\" name=\"last_name\" label=\"Last Name\" />\r\n              </Grid>\r\n            </Grid>\r\n            <TextField margin=\"normal\" required fullWidth id=\"email\" name=\"email\" label=\"Email Address\" />\r\n            <TextField\r\n              margin='normal' required fullWidth id='password' name='password' type={showPassword ? 'text' : 'password'} label='Password' InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton onClick={handlePasswordVisibility} edge='end'>\r\n                      {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              margin='normal' required fullWidth id='password_confirmation' name='password_confirmation' type='password' label='Confirm Password' />\r\n\r\n            <Box sx={{ textAlign: 'center', mt: 1 }}>\r\n              <Button type=\"submit\" variant=\"contained\" sx={{ mt: 1, px: 5, backgroundColor: 'white', color: 'navy', fontWeight: '550' }}>\r\n                get OTP\r\n              </Button>\r\n              {/* {error.status ? <Alert severity={error.type}>{error.msg}</Alert> : ''} */}\r\n              <br /><br />\r\n              <NavLink onClick={Refresh} style={{ color: 'blue', fontStyle: 'normal' }}>Already have an account?</NavLink>\r\n            </Box>\r\n            {error.status && <Alert severity={error.type} sx={{ textAlign: 'center' }}>{error.msg}</Alert>}\r\n          </Box>\r\n        </>\r\n        :\r\n        <>\r\n          <Box component=\"form\" sx={{ p: 3, display: 'flex', justifyContent: 'center' }} noValidate id=\"verify-otp-form\" onSubmit={handleVerifyOTP}>\r\n            <TextField id=\"otp\" name=\"otp\" required fullWidth margin='normal' label='Enter OTP' />\r\n            <br />\r\n            <Box sx={{ m: 2, display: 'flex', justifyContent: 'center' }}>\r\n              {isLoading ? <CircularProgress /> :\r\n                <Button type='submit' variant='contained' color=\"info\">Verify</Button>}\r\n              {error.status && <Alert severity={error.type} sx={{ textAlign: 'center' }}>{error.msg}</Alert>}\r\n\r\n            </Box>\r\n          </Box>\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserReg;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}