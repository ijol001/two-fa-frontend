{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst baseQuery = fetchBaseQuery({\n  baseUrl: 'http://127.0.0.1:4050/api/user/',\n  prepareHeaders: headers => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      headers.set('authorization', `Bearer ${token}`);\n    }\n    return headers;\n  }\n});\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n  baseQuery,\n  endpoints: builder => ({\n    userReg: builder.mutation({\n      query: user => ({\n        url: 'reg',\n        method: 'POST',\n        body: user,\n        headers: {\n          'Content-type': 'application/json'\n        }\n      })\n    }),\n    userLogin: builder.mutation({\n      query: user => ({\n        url: 'login',\n        method: 'POST',\n        body: user,\n        headers: {\n          'Content-type': 'application/json'\n        }\n      })\n    }),\n    verifyOTP: builder.mutation({\n      query: user => ({\n        url: 'verify-otp',\n        method: 'POST',\n        body: user,\n        headers: {\n          'Content-type': 'application/json'\n        }\n      })\n    }),\n    verifyLoginOTP: builder.mutation({\n      query: user => ({\n        url: 'verify-login-otp',\n        method: 'POST',\n        body: user,\n        headers: {\n          'Content-type': 'application/json'\n        }\n      })\n    }),\n    getLoggedUser: builder.query({\n      query: () => ({\n        url: 'loggedUser',\n        method: 'GET'\n      })\n    })\n  })\n});\nexport const {\n  useUserRegMutation,\n  useUserLoginMutation,\n  useVerifyOTPMutation,\n  useVerifyLoginOTPMutation,\n  useGetLoggedUserQuery\n} = authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","baseQuery","baseUrl","prepareHeaders","headers","token","localStorage","getItem","set","authApi","reducerPath","endpoints","builder","userReg","mutation","query","user","url","method","body","userLogin","verifyOTP","verifyLoginOTP","getLoggedUser","useUserRegMutation","useUserLoginMutation","useVerifyOTPMutation","useVerifyLoginOTPMutation","useGetLoggedUserQuery"],"sources":["C:/Users/Daigy Sarma/Desktop/Project_2FA/authreactapp/src/services/authApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst baseQuery = fetchBaseQuery({\r\n  baseUrl: 'http://127.0.0.1:4050/api/user/',\r\n  prepareHeaders: (headers) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      headers.set('authorization', `Bearer ${token}`);\r\n    }\r\n    return headers;\r\n  },\r\n});\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  baseQuery,\r\n  endpoints: (builder) => ({\r\n    userReg: builder.mutation({\r\n      query: (user) => ({\r\n        url: 'reg',\r\n        method: 'POST',\r\n        body: user,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n    userLogin: builder.mutation({\r\n      query: (user) => ({\r\n        url: 'login',\r\n        method: 'POST',\r\n        body: user,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n    verifyOTP: builder.mutation({\r\n      query: (user) => ({\r\n        url: 'verify-otp',\r\n        method: 'POST',\r\n        body: user,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n    verifyLoginOTP: builder.mutation({\r\n      query: (user) => ({\r\n        url: 'verify-login-otp',\r\n        method: 'POST',\r\n        body: user,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n    getLoggedUser: builder.query({\r\n      query: () => ({\r\n        url: 'loggedUser',\r\n        method: 'GET',\r\n      }),\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useUserRegMutation,\r\n  useUserLoginMutation,\r\n  useVerifyOTPMutation,\r\n  useVerifyLoginOTPMutation,\r\n  useGetLoggedUserQuery,\r\n} = authApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,SAAS,GAAGD,cAAc,CAAC;EAC/BE,OAAO,EAAE,iCAAiC;EAC1CC,cAAc,EAAGC,OAAO,IAAK;IAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,OAAO,CAACI,GAAG,CAAC,eAAe,EAAG,UAASH,KAAM,EAAC,CAAC;IACjD;IACA,OAAOD,OAAO;EAChB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,OAAO,GAAGV,SAAS,CAAC;EAC/BW,WAAW,EAAE,SAAS;EACtBT,SAAS;EACTU,SAAS,EAAGC,OAAO,KAAM;IACvBC,OAAO,EAAED,OAAO,CAACE,QAAQ,CAAC;MACxBC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,KAAK;QACVC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH,IAAI;QACVZ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;IACH,CAAC,CAAC;IACFgB,SAAS,EAAER,OAAO,CAACE,QAAQ,CAAC;MAC1BC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,OAAO;QACZC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH,IAAI;QACVZ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;IACH,CAAC,CAAC;IACFiB,SAAS,EAAET,OAAO,CAACE,QAAQ,CAAC;MAC1BC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,YAAY;QACjBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH,IAAI;QACVZ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;IACH,CAAC,CAAC;IACFkB,cAAc,EAAEV,OAAO,CAACE,QAAQ,CAAC;MAC/BC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,kBAAkB;QACvBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH,IAAI;QACVZ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;IACH,CAAC,CAAC;IACFmB,aAAa,EAAEX,OAAO,CAACG,KAAK,CAAC;MAC3BA,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAE,YAAY;QACjBC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXM,kBAAkB;EAClBC,oBAAoB;EACpBC,oBAAoB;EACpBC,yBAAyB;EACzBC;AACF,CAAC,GAAGnB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}