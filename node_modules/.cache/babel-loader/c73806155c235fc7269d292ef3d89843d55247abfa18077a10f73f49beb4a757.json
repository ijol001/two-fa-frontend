{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\Project_2FA\\\\authreactapp\\\\src\\\\Pages\\\\Auth\\\\UserReg.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { Box, Grid, FormControlLabel, Checkbox, Button, Alert, TextField, InputAdornment, IconButton, InputLabel, CircularProgress } from '@mui/material';\n// import VisibilityIcon from '@mui/icons-material/Visibility';\n// import VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n// import { useState } from 'react';\n// import { NavLink, useNavigate } from 'react-router-dom';\n// import { useUserRegMutation } from '../../services/authApi';\n// import { storeToken } from '../../services/LocalStorage';\n\n// const UserReg = () => {\n//   const Refresh = () => {\n//     window.location.reload();\n//   };\n\n//   const [error, setError] = useState({\n//     status: false,\n//     msg: '',\n//     type: '',\n//   });\n\n//   const navigate = useNavigate();\n//   const [userReg, { isLoading }] = useUserRegMutation();\n\n//   const [showPassword, setShowPassword] = useState(false);\n//   const handlePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\n//   const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{6,}$/;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const data = new FormData(e.currentTarget);\n//     const actualData = {\n//       first_name: data.get('first_name'),\n//       last_name: data.get('last_name'),\n//       email: data.get('email'),\n//       password: data.get('password'),\n//       password_confirmation: data.get('password_confirmation'),\n//       tc: data.get('tc')\n//     };\n\n//     if (actualData.first_name && actualData.last_name && actualData.email && actualData.password && actualData.password_confirmation && actualData.tc !== null) {\n//       if (!emailRegex.test(actualData.email)) {\n//         setError({ status: true, msg: \"Please enter a valid email address\", type: 'error' });\n//         return;\n//       }\n//       if (!passwordRegex.test(actualData.password)) {\n//         setError({ status: true, msg: \"Password must be at least 6 characters long and contain at least one special character.\", type: 'error' });\n//         return;\n//       }\n//       if (actualData.password === actualData.password_confirmation) {\n//         const res = await userReg(actualData);\n//         console.log(res);\n//         if (res.data.status === 'success') {\n//           storeToken(res.data.token)\n//           setTimeout(() => {\n//             navigate('/dashboard');\n//           }, 3000);\n//         }\n\n//         if (res.data.status === 'failed') {\n//           console.error('error during registration', error);\n//           setError({ status: true, msg: res.data.message, type: 'error' });\n//         }\n//       }\n//       else {\n//         setError({ status: true, msg: \"Password and Confirm Password don't match!\", type: 'error' });\n//       }\n//     } else {\n//       setError({ status: true, msg: 'All fields are required', type: 'error' });\n//     }\n//   };\n\n//   return <>\n//     <h2 style={{ textAlign: 'center', color: 'navy' }}>Welcome!!!</h2>\n\n//     <Box component=\"form\" noValidate sx={{ mt: 0, p: 1, maxWidth: '400px', margin: 'auto' }} id=\"reg-form\" onSubmit={handleSubmit}>\n//       <Grid container spacing={1}>\n//         <Grid item xs={6}>\n//           <TextField margin=\"normal\" required fullWidth id=\"first_name\" name=\"first_name\" label=\"First Name\" />\n//         </Grid>\n//         <Grid item xs={6}>\n//           <TextField margin=\"normal\" required fullWidth id=\"last_name\" name=\"last_name\" label=\"Last Name\" />\n//         </Grid>\n//       </Grid>\n//       <TextField margin=\"normal\" required fullWidth id=\"email\" name=\"email\" label=\"Email Address\" />\n//       <TextField\n//         margin='normal' required fullWidth id='password' name='password' type={showPassword ? 'text' : 'password'} label='Password' InputProps={{\n//           endAdornment: (\n//             <InputAdornment position='end'>\n//               <IconButton onClick={handlePasswordVisibility} edge='end'>\n//                 {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n//               </IconButton>\n//             </InputAdornment>\n//           ),\n//         }}\n//       />\n//       <TextField\n//         margin='normal' required fullWidth id='password_confirmation' name='password_confirmation'  type='password' label='Confirm Password' />\n//       <FormControlLabel control={<Checkbox value={true} name=\"tc\" id=\"tc\" />} label=\"I agree to the terms and conditions\" />\n//       <Box sx={{ textAlign: 'center', mt: 1 }}>\n//         <Button type=\"submit\" variant=\"contained\" sx={{ mt: 1, px: 5, backgroundColor: 'white', color: 'navy', fontWeight: '550' }}>\n//           Register\n//         </Button>\n//         <br /><br />\n//         <NavLink onClick={Refresh} style={{ color: 'white', fontStyle: 'normal' }}>Already have an account?</NavLink>\n//       </Box>\n//       {error.status && <Alert severity={error.type} sx={{ textAlign: 'center' }}>{error.msg}</Alert>}\n//     </Box>\n//   </>\n// };\n\n// export default UserReg;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserReg() {\n  _s();\n  const [first_name, setFName] = useState('');\n  const [last_name, setLName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [password_confirmation, setPasswordConfirmation] = useState('');\n  const [otp, setOTP] = useState('');\n  const [message, setMessage] = useState('');\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/user/reg', {\n        first_name,\n        last_name,\n        email,\n        password,\n        password_confirmation\n      });\n      const {\n        otp\n      } = response.data;\n      setOTP(otp);\n      setMessage('Please check your email for the OTP');\n    } catch (error) {\n      setMessage('Error registering user');\n      console.error(error);\n    }\n  };\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/verify-otp', {\n        email,\n        otp\n      });\n      setMessage('OTP verified successfully');\n    } catch (error) {\n      setMessage('Error verifying OTP');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: first_name,\n        onChange: e => setFName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: last_name,\n        onChange: e => setFName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPasswordConfirmation(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), otp && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerifyOTP,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter OTP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: otp,\n        onChange: e => setOTP(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(UserReg, \"axa54uH0SnfZeZZAFV/hbG6DFgY=\");\n_c = UserReg;\nexport default UserReg;\nvar _c;\n$RefreshReg$(_c, \"UserReg\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UserReg","_s","first_name","setFName","last_name","setLName","email","setEmail","password","setPassword","password_confirmation","setPasswordConfirmation","otp","setOTP","message","setMessage","handleRegister","e","preventDefault","response","post","data","error","console","handleVerifyOTP","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/Project_2FA/authreactapp/src/Pages/Auth/UserReg.js"],"sourcesContent":["// import React from 'react';\r\n// import { Box, Grid, FormControlLabel, Checkbox, Button, Alert, TextField, InputAdornment, IconButton, InputLabel, CircularProgress } from '@mui/material';\r\n// import VisibilityIcon from '@mui/icons-material/Visibility';\r\n// import VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n// import { useState } from 'react';\r\n// import { NavLink, useNavigate } from 'react-router-dom';\r\n// import { useUserRegMutation } from '../../services/authApi';\r\n// import { storeToken } from '../../services/LocalStorage';\r\n\r\n\r\n// const UserReg = () => {\r\n//   const Refresh = () => {\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   const [error, setError] = useState({\r\n//     status: false,\r\n//     msg: '',\r\n//     type: '',\r\n//   });\r\n\r\n//   const navigate = useNavigate();\r\n//   const [userReg, { isLoading }] = useUserRegMutation();\r\n\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n//   const handlePasswordVisibility = () => {\r\n//     setShowPassword(!showPassword);\r\n//   };\r\n\r\n//   const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\r\n//   const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{6,}$/;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const data = new FormData(e.currentTarget);\r\n//     const actualData = {\r\n//       first_name: data.get('first_name'),\r\n//       last_name: data.get('last_name'),\r\n//       email: data.get('email'),\r\n//       password: data.get('password'),\r\n//       password_confirmation: data.get('password_confirmation'),\r\n//       tc: data.get('tc')\r\n//     };\r\n\r\n//     if (actualData.first_name && actualData.last_name && actualData.email && actualData.password && actualData.password_confirmation && actualData.tc !== null) {\r\n//       if (!emailRegex.test(actualData.email)) {\r\n//         setError({ status: true, msg: \"Please enter a valid email address\", type: 'error' });\r\n//         return;\r\n//       }\r\n//       if (!passwordRegex.test(actualData.password)) {\r\n//         setError({ status: true, msg: \"Password must be at least 6 characters long and contain at least one special character.\", type: 'error' });\r\n//         return;\r\n//       }\r\n//       if (actualData.password === actualData.password_confirmation) {\r\n//         const res = await userReg(actualData);\r\n//         console.log(res);\r\n//         if (res.data.status === 'success') {\r\n//           storeToken(res.data.token)\r\n//           setTimeout(() => {\r\n//             navigate('/dashboard');\r\n//           }, 3000);\r\n//         }\r\n\r\n//         if (res.data.status === 'failed') {\r\n//           console.error('error during registration', error);\r\n//           setError({ status: true, msg: res.data.message, type: 'error' });\r\n//         }\r\n//       }\r\n//       else {\r\n//         setError({ status: true, msg: \"Password and Confirm Password don't match!\", type: 'error' });\r\n//       }\r\n//     } else {\r\n//       setError({ status: true, msg: 'All fields are required', type: 'error' });\r\n//     }\r\n//   };\r\n\r\n//   return <>\r\n//     <h2 style={{ textAlign: 'center', color: 'navy' }}>Welcome!!!</h2>\r\n\r\n//     <Box component=\"form\" noValidate sx={{ mt: 0, p: 1, maxWidth: '400px', margin: 'auto' }} id=\"reg-form\" onSubmit={handleSubmit}>\r\n//       <Grid container spacing={1}>\r\n//         <Grid item xs={6}>\r\n//           <TextField margin=\"normal\" required fullWidth id=\"first_name\" name=\"first_name\" label=\"First Name\" />\r\n//         </Grid>\r\n//         <Grid item xs={6}>\r\n//           <TextField margin=\"normal\" required fullWidth id=\"last_name\" name=\"last_name\" label=\"Last Name\" />\r\n//         </Grid>\r\n//       </Grid>\r\n//       <TextField margin=\"normal\" required fullWidth id=\"email\" name=\"email\" label=\"Email Address\" />\r\n//       <TextField\r\n//         margin='normal' required fullWidth id='password' name='password' type={showPassword ? 'text' : 'password'} label='Password' InputProps={{\r\n//           endAdornment: (\r\n//             <InputAdornment position='end'>\r\n//               <IconButton onClick={handlePasswordVisibility} edge='end'>\r\n//                 {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n//               </IconButton>\r\n//             </InputAdornment>\r\n//           ),\r\n//         }}\r\n//       />\r\n//       <TextField\r\n//         margin='normal' required fullWidth id='password_confirmation' name='password_confirmation'  type='password' label='Confirm Password' />\r\n//       <FormControlLabel control={<Checkbox value={true} name=\"tc\" id=\"tc\" />} label=\"I agree to the terms and conditions\" />\r\n//       <Box sx={{ textAlign: 'center', mt: 1 }}>\r\n//         <Button type=\"submit\" variant=\"contained\" sx={{ mt: 1, px: 5, backgroundColor: 'white', color: 'navy', fontWeight: '550' }}>\r\n//           Register\r\n//         </Button>\r\n//         <br /><br />\r\n//         <NavLink onClick={Refresh} style={{ color: 'white', fontStyle: 'normal' }}>Already have an account?</NavLink>\r\n//       </Box>\r\n//       {error.status && <Alert severity={error.type} sx={{ textAlign: 'center' }}>{error.msg}</Alert>}\r\n//     </Box>\r\n//   </>\r\n// };\r\n\r\n// export default UserReg;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UserReg() {\r\n  const [first_name, setFName] = useState('');\r\n  const [last_name, setLName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password_confirmation, setPasswordConfirmation] = useState('');\r\n  const [otp, setOTP] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/user/reg', { first_name,last_name, email, password, password_confirmation });\r\n      const { otp } = response.data;\r\n      setOTP(otp);\r\n      setMessage('Please check your email for the OTP');\r\n    } catch (error) {\r\n      setMessage('Error registering user');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/verify-otp', { email, otp });\r\n      setMessage('OTP verified successfully');\r\n    } catch (error) {\r\n      setMessage('Error verifying OTP');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>User Registration</h2>\r\n      <form onSubmit={handleRegister}>\r\n        <label>First Name:</label>\r\n        <input type=\"text\" value={first_name} onChange={(e) => setFName(e.target.value)} required />\r\n        <label>Last Name:</label>\r\n        <input type=\"text\" value={last_name} onChange={(e) => setFName(e.target.value)} required />\r\n        <label>Email:</label>\r\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n        <label>Password:</label>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n        <label>Confirm Password:</label>\r\n        <input type=\"password\" value={password} onChange={(e) => setPasswordConfirmation(e.target.value)} required />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      {otp && (\r\n        <form onSubmit={handleVerifyOTP}>\r\n          <label>Enter OTP:</label>\r\n          <input type=\"text\" value={otp} onChange={(e) => setOTP(e.target.value)} required />\r\n          <button type=\"submit\">Verify OTP</button>\r\n        </form>\r\n      )}\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserReg;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}