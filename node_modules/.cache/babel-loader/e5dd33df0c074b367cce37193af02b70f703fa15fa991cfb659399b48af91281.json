{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';export const authApi=createApi({reducerPath:'authApi',//  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\nbaseQuery:fetchBaseQuery({baseUrl:'https://2-fa-backend.vercel.app/api/user/'}),endpoints:builder=>({userReg:builder.mutation({query:user=>{return{url:'reg',method:'POST',body:user,headers:{'Content-type':'application/json'}};}}),userLogin:builder.mutation({query:user=>{return{url:'login',method:'POST',body:user,headers:{'Content-type':'application/json'}};}}),verifyOTP:builder.mutation({query:user=>{return{url:'verify-otp',method:'POST',body:user,headers:{'Content-type':'application/json'}};}}),verifyloginOTP:builder.mutation({query:user=>{return{url:'verify-login-otp',method:'POST',body:user,headers:{'Content-type':'application/json'}};}})})});export const{useUserRegMutation,useUserLoginMutation,useVerifyOTPMutation,useVerifyloginOTPMutation}=authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","reducerPath","baseQuery","baseUrl","endpoints","builder","userReg","mutation","query","user","url","method","body","headers","userLogin","verifyOTP","verifyloginOTP","useUserRegMutation","useUserLoginMutation","useVerifyOTPMutation","useVerifyloginOTPMutation"],"sources":["D:/4th Sem projects/Project_2FA/authreactapp/src/services/authApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  //  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://2-fa-backend.vercel.app/api/user/' }),\r\n\r\n  endpoints: (builder) => ({\r\n\r\n    userReg: builder.mutation({                     \r\n      query:(user)=>{\r\n        return{\r\n            url: 'reg',\r\n            method:'POST',\r\n            body: user,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n            }\r\n        }\r\n      }\r\n    }),\r\n    userLogin: builder.mutation({\r\n      query:(user)=>{\r\n        return{\r\n          url: 'login',\r\n          method: 'POST',\r\n          body: user,\r\n          headers:{\r\n            'Content-type': 'application/json'\r\n          }\r\n        }\r\n      }\r\n    }),\r\n    verifyOTP: builder.mutation({\r\n      query: (user) => {\r\n        return {\r\n          url: 'verify-otp',\r\n          method: 'POST',\r\n          body: user,\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          }\r\n        }\r\n      }\r\n    }),\r\n    verifyloginOTP: builder.mutation({\r\n      query: (user) => {\r\n        return {\r\n          url: 'verify-login-otp',\r\n          method: 'POST',\r\n          body: user,\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          }\r\n        }\r\n      }\r\n    }),\r\n})\r\n})\r\n\r\nexport const {useUserRegMutation, useUserLoginMutation , useVerifyOTPMutation, useVerifyloginOTPMutation} =authApi  "],"mappings":"AAAA,OAASA,SAAS,CAAEC,cAAc,KAAQ,8BAA8B,CAExE,MAAO,MAAM,CAAAC,OAAO,CAAGF,SAAS,CAAC,CAC/BG,WAAW,CAAE,SAAS,CACtB;AACAC,SAAS,CAAEH,cAAc,CAAC,CAAEI,OAAO,CAAE,2CAA4C,CAAC,CAAC,CAEnFC,SAAS,CAAGC,OAAO,GAAM,CAEvBC,OAAO,CAAED,OAAO,CAACE,QAAQ,CAAC,CACxBC,KAAK,CAAEC,IAAI,EAAG,CACZ,MAAM,CACFC,GAAG,CAAE,KAAK,CACVC,MAAM,CAAC,MAAM,CACbC,IAAI,CAAEH,IAAI,CACVI,OAAO,CAAC,CACJ,cAAc,CAAE,kBACpB,CACJ,CAAC,CACH,CACF,CAAC,CAAC,CACFC,SAAS,CAAET,OAAO,CAACE,QAAQ,CAAC,CAC1BC,KAAK,CAAEC,IAAI,EAAG,CACZ,MAAM,CACJC,GAAG,CAAE,OAAO,CACZC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IAAI,CACVI,OAAO,CAAC,CACN,cAAc,CAAE,kBAClB,CACF,CAAC,CACH,CACF,CAAC,CAAC,CACFE,SAAS,CAAEV,OAAO,CAACE,QAAQ,CAAC,CAC1BC,KAAK,CAAGC,IAAI,EAAK,CACf,MAAO,CACLC,GAAG,CAAE,YAAY,CACjBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IAAI,CACVI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CACH,CACF,CAAC,CAAC,CACFG,cAAc,CAAEX,OAAO,CAACE,QAAQ,CAAC,CAC/BC,KAAK,CAAGC,IAAI,EAAK,CACf,MAAO,CACLC,GAAG,CAAE,kBAAkB,CACvBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IAAI,CACVI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CACH,CACF,CAAC,CACL,CAAC,CACD,CAAC,CAAC,CAEF,MAAO,MAAM,CAACI,kBAAkB,CAAEC,oBAAoB,CAAGC,oBAAoB,CAAEC,yBAAyB,CAAC,CAAEpB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}