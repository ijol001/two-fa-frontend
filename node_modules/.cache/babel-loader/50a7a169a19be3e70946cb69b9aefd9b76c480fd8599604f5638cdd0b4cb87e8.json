{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\authreactapp\\\\src\\\\Pages\\\\Auth\\\\ResetPasswordEmail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResetPasswordEmail = () => {\n  _s();\n  const [error, setError] = useState({\n    status: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      email: data.get('email'),\n      password: data.get('password')\n    };\n    if (actualData.email && actualData.password) {\n      console.log(actualData);\n      document.getElementById('login-form').reset();\n      setError({\n        status: true,\n        msg: \"Login is successful\",\n        type: 'success'\n      });\n      navigate('/');\n    } else {\n      console.log(\"all fields are required\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noVariable: true,\n      sx: {\n        mt: 1\n      },\n      id: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 106\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        label: \"User Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2,\n            px: 5\n          },\n          children: \" Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: \"Forgot Password ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), error.status ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: error.type,\n        children: error.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ResetPasswordEmail, \"zTupfIEm4HLF5g0koE+8SnzZgsc=\", true);\n_c = ResetPasswordEmail;\nexport default ResetPasswordEmail;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordEmail\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPasswordEmail","_s","error","setError","useState","status","msg","type","navigate","useNavigate","handleSubmit","e","preventDefault","data","FormData","currentTarget","actualData","email","get","password","console","log","document","getElementById","reset","children","Box","component","noVariable","sx","mt","id","onSubmit","TextField","margin","required","fullWidth","name","label","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","Button","variant","mb","px","NavLink","to","Alert","severity","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/authreactapp/src/Pages/Auth/ResetPasswordEmail.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst ResetPasswordEmail = () => {\r\n    const [error, setError] = useState({\r\n        status: false,\r\n        msg: \"\",\r\n        type: \"\"\r\n      })\r\n      const navigate = useNavigate()\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData(e.currentTarget)\r\n        const actualData = {\r\n          email: data.get('email'),\r\n          password: data.get('password')\r\n    \r\n        }\r\n        if (actualData.email && actualData.password) {\r\n          console.log(actualData);\r\n          document.getElementById('login-form').reset();\r\n          setError({ status: true, msg: \"Login is successful\", type: 'success' })\r\n          navigate('/')\r\n        } else {\r\n          console.log(\"all fields are required\");\r\n        }\r\n      }\r\n    \r\n      return <>\r\n        <Box component='form' noVariable sx={{ mt: 1 }} id='login-form' onSubmit={handleSubmit}>\r\n          <TextField margin='normal' required fullWidth id='email' name='email' label='Email Address' /> <br/>\r\n          <TextField margin='normal' required fullWidth id='password' name='password' type='password' label='User Password' />\r\n          <Box textAlign='center'>\r\n            <Button type='submit' variant='contained' sx={{ mt: 3, mb: 2, px: 5 }}> Login </Button>\r\n          </Box>\r\n          <NavLink to='/'>Forgot Password ?</NavLink>\r\n          {error.status ? <Alert severity={error.type}>{error.msg}</Alert> : ''}\r\n        </Box>\r\n      </>;\r\n    }\r\n\r\nexport default ResetPasswordEmail\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC;IAC/BC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAC9B,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,aAAa,CAAC;IAC1C,MAAMC,UAAU,GAAG;MACjBC,KAAK,EAAEJ,IAAI,CAACK,GAAG,CAAC,OAAO,CAAC;MACxBC,QAAQ,EAAEN,IAAI,CAACK,GAAG,CAAC,UAAU;IAE/B,CAAC;IACD,IAAIF,UAAU,CAACC,KAAK,IAAID,UAAU,CAACG,QAAQ,EAAE;MAC3CC,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;MACvBM,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK,CAAC,CAAC;MAC7CrB,QAAQ,CAAC;QAAEE,MAAM,EAAE,IAAI;QAAEC,GAAG,EAAE,qBAAqB;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;MACvEC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLY,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC;EACF,CAAC;EAED,oBAAOxB,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACL5B,OAAA,CAAC6B,GAAG;MAACC,SAAS,EAAC,MAAM;MAACC,UAAU;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAACC,EAAE,EAAC,YAAY;MAACC,QAAQ,EAAEtB,YAAa;MAAAe,QAAA,gBACrF5B,OAAA,CAACoC,SAAS;QAACC,MAAM,EAAC,QAAQ;QAACC,QAAQ;QAACC,SAAS;QAACL,EAAE,EAAC,OAAO;QAACM,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eAAA7C,OAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpG7C,OAAA,CAACoC,SAAS;QAACC,MAAM,EAAC,QAAQ;QAACC,QAAQ;QAACC,SAAS;QAACL,EAAE,EAAC,UAAU;QAACM,IAAI,EAAC,UAAU;QAAC9B,IAAI,EAAC,UAAU;QAAC+B,KAAK,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpH7C,OAAA,CAAC6B,GAAG;QAACiB,SAAS,EAAC,QAAQ;QAAAlB,QAAA,eACrB5B,OAAA,CAAC+C,MAAM;UAACrC,IAAI,EAAC,QAAQ;UAACsC,OAAO,EAAC,WAAW;UAAChB,EAAE,EAAE;YAAEC,EAAE,EAAE,CAAC;YAAEgB,EAAE,EAAE,CAAC;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAtB,QAAA,EAAC;QAAO;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC,eACN7C,OAAA,CAACmD,OAAO;QAACC,EAAE,EAAC,GAAG;QAAAxB,QAAA,EAAC;MAAiB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EAC1CxC,KAAK,CAACG,MAAM,gBAAGR,OAAA,CAACqD,KAAK;QAACC,QAAQ,EAAEjD,KAAK,CAACK,IAAK;QAAAkB,QAAA,EAAEvB,KAAK,CAACI;MAAG;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GAAG,EAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE;EAAC,gBACN,CAAC;AACL,CAAC;AAAAzC,EAAA,CApCCD,kBAAkB;AAAAoD,EAAA,GAAlBpD,kBAAkB;AAsCxB,eAAeA,kBAAkB;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}