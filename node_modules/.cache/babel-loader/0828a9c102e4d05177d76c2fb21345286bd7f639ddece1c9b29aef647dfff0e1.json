{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\Project_2FA\\\\authreactapp\\\\src\\\\Pages\\\\Auth\\\\Userregverify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Tabs, Tab, TextField, Alert, CircularProgress, Grid } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuthId, removeAuthId, storeToken } from '../../services/LocalStorage';\nimport { useVerifyOTPMutation } from '../../services/authApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Userregverify = () => {\n  _s();\n  const [value, setValue] = useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const [authid, setAuthId] = useState(getAuthId());\n  const [error, setError] = useState({\n    status: false,\n    msg: '',\n    type: ''\n  });\n  const [verifyOTP, {\n    isLoading\n  }] = useVerifyOTPMutation();\n  const navigate = useNavigate();\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      otp: data.get('otp'),\n      id: authid\n    };\n    if (actualData.otp && actualData.id) {\n      try {\n        const res = await verifyOTP(actualData);\n        if (res.data.status === \"success\") {\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: 'success'\n          });\n          storeToken();\n          removeAuthId();\n          setAuthId(null);\n          setTimeout(() => {\n            navigate('/LogReg');\n            window.location.reload();\n          }, 4000);\n        } else {\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: 'error'\n          });\n        }\n      } catch (error) {\n        console.error('Error during OTP verification:', error);\n        setError({\n          status: true,\n          msg: \"Error occurred during OTP verification\",\n          type: 'error'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      textshadow: \"3px 2px 2px white\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      sx: {\n        background: 'linear-gradient(to right,  black, purple, navy, black)',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        minHeight: '100vh',\n        padding: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 6,\n        lg: 4,\n        sx: {\n          background: 'rgba(255, 255, 255, 0.8)',\n          border: '2px solid rgba(0, 0, 0, 0.5)',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: 3,\n          borderRadius: 8,\n          backdropFilter: 'blur(20px)',\n          boxShadow: 3,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            value: value,\n            onChange: handleChange,\n            centered: true,\n            TabIndicatorProps: {\n              style: {\n                backgroundColor: 'navy'\n              }\n            },\n            sx: {\n              marginBottom: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              sx: {\n                p: 3,\n                display: 'flex',\n                justifyContent: 'center'\n              },\n              noValidate: true,\n              id: \"verify-otp-regform\",\n              onSubmit: handleVerifyOTP,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"otp\",\n                name: \"otp\",\n                required: true,\n                fullWidth: true,\n                margin: \"normal\",\n                label: \"Enter OTP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  m: 2,\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: [isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 20\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"info\",\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 9\n                }, this), error.status && /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: error.type,\n                  sx: {\n                    textAlign: 'center'\n                  },\n                  children: error.msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Verify OTP\",\n              sx: {\n                textTransform: 'none',\n                fontWeight: 'bold',\n                color: 'navy'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n_s(Userregverify, \"k4BG27lTMC+2iYKJxrwJ6Py8Pqs=\", false, function () {\n  return [useVerifyOTPMutation, useNavigate];\n});\n_c = Userregverify;\nexport default Userregverify;\nvar _c;\n$RefreshReg$(_c, \"Userregverify\");","map":{"version":3,"names":["React","useState","Box","Button","Tabs","Tab","TextField","Alert","CircularProgress","Grid","useNavigate","getAuthId","removeAuthId","storeToken","useVerifyOTPMutation","jsxDEV","_jsxDEV","Fragment","_Fragment","Userregverify","_s","value","setValue","handleChange","event","newValue","authid","setAuthId","error","setError","status","msg","type","verifyOTP","isLoading","navigate","handleVerifyOTP","e","preventDefault","data","FormData","currentTarget","actualData","otp","get","id","res","message","setTimeout","window","location","reload","console","children","container","justifyContent","alignItems","textshadow","display","flexDirection","sx","background","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","padding","item","xs","sm","md","lg","border","borderRadius","backdropFilter","boxShadow","textAlign","width","onChange","centered","TabIndicatorProps","style","backgroundColor","marginBottom","component","p","noValidate","onSubmit","name","required","fullWidth","margin","label","fileName","_jsxFileName","lineNumber","columnNumber","m","variant","color","severity","textTransform","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/Project_2FA/authreactapp/src/Pages/Auth/Userregverify.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Button,Tabs,Tab, TextField, Alert,CircularProgress ,Grid} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuthId , removeAuthId, storeToken} from '../../services/LocalStorage';\r\nimport { useVerifyOTPMutation } from '../../services/authApi';\r\n\r\nconst Userregverify = () => {\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [authid, setAuthId] = useState(getAuthId())\r\n  const [error, setError] = useState({\r\n    status: false,\r\n    msg: '',\r\n    type: '',\r\n  });\r\n\r\n  const [verifyOTP, { isLoading }] = useVerifyOTPMutation();\r\n  const navigate = useNavigate();\r\n\r\nconst handleVerifyOTP = async (e) => {\r\n  e.preventDefault();\r\n  const data = new FormData(e.currentTarget);\r\n  const actualData = {\r\n    otp: data.get('otp'),\r\n    id: authid\r\n  };\r\n\r\n  if (actualData.otp && actualData.id) {\r\n    try {\r\n      const res = await verifyOTP(actualData);\r\n      if (res.data.status === \"success\") {\r\n        setError({ status: true, msg: res.data.message, type: 'success' });\r\n        storeToken();\r\n        removeAuthId();\r\n        setAuthId(null);\r\n        setTimeout(() => {\r\n          navigate('/LogReg');\r\n          window.location.reload();\r\n        },4000);\r\n      } else {\r\n        setError({ status: true, msg: res.data.message, type: 'error' });\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.error('Error during OTP verification:', error);\r\n      setError({ status: true, msg: \"Error occurred during OTP verification\", type: 'error' });\r\n    }\r\n  }\r\n};\r\n  return  <>\r\n<Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        textshadow='3px 2px 2px white'\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        \r\n        sx={{\r\n          background: 'linear-gradient(to right,  black, purple, navy, black)',\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          backgroundRepeat: 'no-repeat',\r\n          minHeight: '100vh',\r\n          padding: 2,\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={8}\r\n          md={6}\r\n          lg={4}\r\n          sx={{\r\n            background: 'rgba(255, 255, 255, 0.8)',\r\n            border: '2px solid rgba(0, 0, 0, 0.5)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            padding: 3,\r\n            borderRadius: 8,\r\n            backdropFilter: 'blur(20px)',\r\n            boxShadow: 3,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Box sx={{ width: '100%' }}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              centered\r\n              TabIndicatorProps={{\r\n                style: {\r\n                  backgroundColor: 'navy',\r\n                },\r\n              }}\r\n              sx={{ marginBottom: 2 }}\r\n              \r\n            >\r\n              <Box component=\"form\" sx={{ p: 3, display: 'flex', justifyContent: 'center' }} noValidate id=\"verify-otp-regform\" onSubmit={handleVerifyOTP}>\r\n    <TextField id=\"otp\" name=\"otp\" required fullWidth margin='normal' label='Enter OTP' />\r\n    <br />\r\n    <Box sx={{ m: 2, display: 'flex', justifyContent: 'center' }}>\r\n      {isLoading ? <CircularProgress /> :\r\n        <Button type='submit' variant='contained' color=\"info\">Verify</Button>}\r\n      {error.status && <Alert severity={error.type} sx={{ textAlign: 'center' }}>{error.msg}</Alert>}\r\n\r\n    </Box>\r\n  </Box>\r\n              <Tab label='Verify OTP' sx={{ textTransform: 'none', fontWeight: 'bold', color: 'navy' }} />\r\n            </Tabs>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n\r\n  \r\n</>\r\n\r\n}\r\nexport default Userregverify;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,MAAM,EAACC,IAAI,EAACC,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAACC,gBAAgB,EAAEC,IAAI,QAAO,eAAe;AAC5F,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAGC,YAAY,EAAEC,UAAU,QAAO,6BAA6B;AACjF,SAASC,oBAAoB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMsB,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxCH,QAAQ,CAACG,QAAQ,CAAC;EACpB,CAAC;EAED,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAACU,SAAS,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC;IACjC6B,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAM,CAACC,SAAS,EAAE;IAAEC;EAAU,CAAC,CAAC,GAAGpB,oBAAoB,CAAC,CAAC;EACzD,MAAMqB,QAAQ,GAAGzB,WAAW,CAAC,CAAC;EAEhC,MAAM0B,eAAe,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,aAAa,CAAC;IAC1C,MAAMC,UAAU,GAAG;MACjBC,GAAG,EAAEJ,IAAI,CAACK,GAAG,CAAC,KAAK,CAAC;MACpBC,EAAE,EAAEnB;IACN,CAAC;IAED,IAAIgB,UAAU,CAACC,GAAG,IAAID,UAAU,CAACG,EAAE,EAAE;MACnC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMb,SAAS,CAACS,UAAU,CAAC;QACvC,IAAII,GAAG,CAACP,IAAI,CAACT,MAAM,KAAK,SAAS,EAAE;UACjCD,QAAQ,CAAC;YAAEC,MAAM,EAAE,IAAI;YAAEC,GAAG,EAAEe,GAAG,CAACP,IAAI,CAACQ,OAAO;YAAEf,IAAI,EAAE;UAAU,CAAC,CAAC;UAClEnB,UAAU,CAAC,CAAC;UACZD,YAAY,CAAC,CAAC;UACde,SAAS,CAAC,IAAI,CAAC;UACfqB,UAAU,CAAC,MAAM;YACfb,QAAQ,CAAC,SAAS,CAAC;YACnBc,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;UAC1B,CAAC,EAAC,IAAI,CAAC;QACT,CAAC,MAAM;UACLtB,QAAQ,CAAC;YAAEC,MAAM,EAAE,IAAI;YAAEC,GAAG,EAAEe,GAAG,CAACP,IAAI,CAACQ,OAAO;YAAEf,IAAI,EAAE;UAAQ,CAAC,CAAC;QAClE;MACF,CAAC,CACD,OAAOJ,KAAK,EAAE;QACZwB,OAAO,CAACxB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDC,QAAQ,CAAC;UAAEC,MAAM,EAAE,IAAI;UAAEC,GAAG,EAAE,wCAAwC;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MAC1F;IACF;EACF,CAAC;EACC,oBAAQhB,OAAA,CAAAE,SAAA;IAAAmC,QAAA,eACVrC,OAAA,CAACP,IAAI;MACG6C,SAAS;MACTC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBC,UAAU,EAAC,mBAAmB;MAC9BC,OAAO,EAAC,MAAM;MACdC,aAAa,EAAC,QAAQ;MAEtBC,EAAE,EAAE;QACFC,UAAU,EAAE,wDAAwD;QACpEC,cAAc,EAAE,OAAO;QACvBC,kBAAkB,EAAE,QAAQ;QAC5BC,gBAAgB,EAAE,WAAW;QAC7BC,SAAS,EAAE,OAAO;QAClBC,OAAO,EAAE;MACX,CAAE;MAAAb,QAAA,eAEFrC,OAAA,CAACP,IAAI;QACH0D,IAAI;QACJC,EAAE,EAAE,EAAG;QACPC,EAAE,EAAE,CAAE;QACNC,EAAE,EAAE,CAAE;QACNC,EAAE,EAAE,CAAE;QACNX,EAAE,EAAE;UACFC,UAAU,EAAE,0BAA0B;UACtCW,MAAM,EAAE,8BAA8B;UACtCd,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBH,UAAU,EAAE,QAAQ;UACpBD,cAAc,EAAE,QAAQ;UACxBW,OAAO,EAAE,CAAC;UACVO,YAAY,EAAE,CAAC;UACfC,cAAc,EAAE,YAAY;UAC5BC,SAAS,EAAE,CAAC;UACZC,SAAS,EAAE;QACb,CAAE;QAAAvB,QAAA,eAEFrC,OAAA,CAACd,GAAG;UAAC0D,EAAE,EAAE;YAAEiB,KAAK,EAAE;UAAO,CAAE;UAAAxB,QAAA,eACzBrC,OAAA,CAACZ,IAAI;YACHiB,KAAK,EAAEA,KAAM;YACbyD,QAAQ,EAAEvD,YAAa;YACvBwD,QAAQ;YACRC,iBAAiB,EAAE;cACjBC,KAAK,EAAE;gBACLC,eAAe,EAAE;cACnB;YACF,CAAE;YACFtB,EAAE,EAAE;cAAEuB,YAAY,EAAE;YAAE,CAAE;YAAA9B,QAAA,gBAGxBrC,OAAA,CAACd,GAAG;cAACkF,SAAS,EAAC,MAAM;cAACxB,EAAE,EAAE;gBAAEyB,CAAC,EAAE,CAAC;gBAAE3B,OAAO,EAAE,MAAM;gBAAEH,cAAc,EAAE;cAAS,CAAE;cAAC+B,UAAU;cAACzC,EAAE,EAAC,oBAAoB;cAAC0C,QAAQ,EAAEnD,eAAgB;cAAAiB,QAAA,gBACtJrC,OAAA,CAACV,SAAS;gBAACuC,EAAE,EAAC,KAAK;gBAAC2C,IAAI,EAAC,KAAK;gBAACC,QAAQ;gBAACC,SAAS;gBAACC,MAAM,EAAC,QAAQ;gBAACC,KAAK,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACtFhF,OAAA;gBAAA6E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNhF,OAAA,CAACd,GAAG;gBAAC0D,EAAE,EAAE;kBAAEqC,CAAC,EAAE,CAAC;kBAAEvC,OAAO,EAAE,MAAM;kBAAEH,cAAc,EAAE;gBAAS,CAAE;gBAAAF,QAAA,GAC1DnB,SAAS,gBAAGlB,OAAA,CAACR,gBAAgB;kBAAAqF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAC/BhF,OAAA,CAACb,MAAM;kBAAC6B,IAAI,EAAC,QAAQ;kBAACkE,OAAO,EAAC,WAAW;kBAACC,KAAK,EAAC,MAAM;kBAAA9C,QAAA,EAAC;gBAAM;kBAAAwC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACvEpE,KAAK,CAACE,MAAM,iBAAId,OAAA,CAACT,KAAK;kBAAC6F,QAAQ,EAAExE,KAAK,CAACI,IAAK;kBAAC4B,EAAE,EAAE;oBAAEgB,SAAS,EAAE;kBAAS,CAAE;kBAAAvB,QAAA,EAAEzB,KAAK,CAACG;gBAAG;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAE3F,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACMhF,OAAA,CAACX,GAAG;cAACuF,KAAK,EAAC,YAAY;cAAChC,EAAE,EAAE;gBAAEyC,aAAa,EAAE,MAAM;gBAAEC,UAAU,EAAE,MAAM;gBAAEH,KAAK,EAAE;cAAO;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAKX,CAAC;AAEH,CAAC;AAAA5E,EAAA,CAtHKD,aAAa;EAAA,QAakBL,oBAAoB,EACtCJ,WAAW;AAAA;AAAA6F,EAAA,GAdxBpF,aAAa;AAuHnB,eAAeA,aAAa;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}