{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\Project_2FA\\\\authreactapp\\\\src\\\\Pages\\\\Auth\\\\UserReg.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Grid, FormControlLabel, Checkbox, Button, Alert, TextField, InputAdornment, IconButton, Paper } from '@mui/material';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useUserRegMutation, useVerifyOTPMutation } from '../../services/authApi';\nimport { storeToken } from '../../services/LocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserReg = () => {\n  _s();\n  const Refresh = () => {\n    window.location.reload();\n  };\n  const [authid, setAuthId] = useState(null);\n  const [error, setError] = useState({\n    status: false,\n    msg: '',\n    type: ''\n  });\n  const navigate = useNavigate();\n  const [userReg] = useUserRegMutation();\n  const [verifyOTP] = useVerifyOTPMutation();\n  const [showPassword, setShowPassword] = useState(false);\n  const handlePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\n  const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{6,}$/;\n  const handleSendOTP = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      first_name: data.get('first_name'),\n      last_name: data.get('last_name'),\n      email: data.get('email'),\n      password: data.get('password'),\n      password_confirmation: data.get('password_confirmation')\n    };\n    if (actualData.first_name && actualData.last_name && actualData.email && actualData.password && actualData.password_confirmation) {\n      if (!emailRegex.test(actualData.email)) {\n        setError({\n          status: true,\n          msg: \"Please enter a valid email address\",\n          type: 'error'\n        });\n        return;\n      }\n      if (!passwordRegex.test(actualData.password)) {\n        setError({\n          status: true,\n          msg: \"Password must be at least 6 characters long and contain at least one special character.\",\n          type: 'error'\n        });\n        return;\n      }\n      if (actualData.password === actualData.password_confirmation) {\n        const res = await userReg(actualData);\n        console.log(res);\n        if (res.data.status === 'success') {\n          storeToken(res.data.token);\n          setAuthId(res.data.authid);\n          setTimeout(() => {\n            navigate('');\n          }, 3000);\n        }\n        if (res.data.status === 'failed') {\n          console.error('error during registration', error);\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: 'error'\n          });\n        }\n      } else {\n        setError({\n          status: true,\n          msg: \"Password and Confirm Password don't match!\",\n          type: 'error'\n        });\n      }\n    } else {\n      setError({\n        status: true,\n        msg: 'All fields are required',\n        type: 'error'\n      });\n    }\n  };\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      otp: data.get('otp'),\n      id: authid // Include authid in the request\n    };\n    if (actualData.otp && actualData.id) {\n      try {\n        const res = await verifyOTP(actualData);\n        console.log('Response from verifyOTP:', res); // Log the response for debugging\n        if (res && res.data && res.data.status === \"success\") {\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: 'success'\n          });\n        } else if (res && res.data && res.data.status === \"failed\") {\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: 'error'\n          });\n        } else {\n          setError({\n            status: true,\n            msg: \"Unexpected response structure\",\n            type: 'error'\n          });\n        }\n      } catch (error) {\n        console.error('Error during OTP verification:', error); // Log the actual error for debugging\n        setError({\n          status: true,\n          msg: \"Error occurred during OTP verification\",\n          type: 'error'\n        });\n      }\n    } else {\n      setError({\n        status: true,\n        msg: \"OTP and authid are required\",\n        type: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: 'navy'\n      },\n      children: \"Welcome!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      sx: {\n        mt: 0,\n        p: 1,\n        maxWidth: '400px',\n        margin: 'auto'\n      },\n      id: \"reg-form\",\n      onSubmit: handleSendOTP,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"first_name\",\n            name: \"first_name\",\n            label: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"last_name\",\n            name: \"last_name\",\n            label: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        type: showPassword ? 'text' : 'password',\n        label: \"Password\",\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handlePasswordVisibility,\n              edge: \"end\",\n              children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"password_confirmation\",\n        name: \"password_confirmation\",\n        type: \"password\",\n        label: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 1,\n            px: 5,\n            backgroundColor: 'white',\n            color: 'navy',\n            fontWeight: '550'\n          },\n          children: \"get OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), error.status ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: error.type,\n          children: error.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          onClick: Refresh,\n          style: {\n            color: 'white',\n            fontStyle: 'normal'\n          },\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this), error.status && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: error.type,\n        sx: {\n          textAlign: 'center'\n        },\n        children: error.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        noValidate: true,\n        id: \"verify-otp-form\",\n        onSubmit: handleVerifyOTP,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"otp\",\n            name: \"otp\",\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Enter OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              m: 2,\n              display: 'flex',\n              justifyContent: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"info\",\n              children: \"Verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), error.status ? /*#__PURE__*/_jsxDEV(Alert, {\n            severity: error.type,\n            children: error.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 31\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(UserReg, \"nZLflSGmB7hQhCNq1vgYuNvfA+A=\", false, function () {\n  return [useNavigate, useUserRegMutation, useVerifyOTPMutation];\n});\n_c = UserReg;\nexport default UserReg;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function UserReg() {\n//   const [first_name, setFName] = useState('');\n//   const [last_name, setLName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [password_confirmation, setPasswordConfirmation] = useState('');\n//   const [otp, setOTP] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('/api/user/reg', { first_name,last_name, email, password, password_confirmation });\n//       const { otp } = response.data;\n//       setOTP(otp);\n//       setMessage('Please check your email for the OTP');\n//     } catch (error) {\n//       setMessage('Error registering user');\n//       console.error(error);\n//     }\n//   };\n\n//   const handleVerifyOTP = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('/api/verify-otp', { email, otp });\n//       setMessage('OTP verified successfully');\n//     } catch (error) {\n//       setMessage('Error verifying OTP');\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>User Registration</h2>\n//       <form onSubmit={handleRegister}>\n//         <label>First Name:</label>\n//         <input type=\"text\" value={first_name} onChange={(e) => setFName(e.target.value)} required />\n//         <label>Last Name:</label>\n//         <input type=\"text\" value={last_name} onChange={(e) => setFName(e.target.value)} required />\n//         <label>Email:</label>\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//         <label>Password:</label>\n//         <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//         <label>Confirm Password:</label>\n//         <input type=\"password\" value={password} onChange={(e) => setPasswordConfirmation(e.target.value)} required />\n//         <button type=\"submit\">Register</button>\n//       </form>\n//       {otp && (\n//         <form onSubmit={handleVerifyOTP}>\n//           <label>Enter OTP:</label>\n//           <input type=\"text\" value={otp} onChange={(e) => setOTP(e.target.value)} required />\n//           <button type=\"submit\">Verify OTP</button>\n//         </form>\n//       )}\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default UserReg;\nvar _c;\n$RefreshReg$(_c, \"UserReg\");","map":{"version":3,"names":["React","Box","Grid","FormControlLabel","Checkbox","Button","Alert","TextField","InputAdornment","IconButton","Paper","VisibilityIcon","VisibilityOffIcon","useState","NavLink","useNavigate","useUserRegMutation","useVerifyOTPMutation","storeToken","jsxDEV","_jsxDEV","Fragment","_Fragment","UserReg","_s","Refresh","window","location","reload","authid","setAuthId","error","setError","status","msg","type","navigate","userReg","verifyOTP","showPassword","setShowPassword","handlePasswordVisibility","emailRegex","passwordRegex","handleSendOTP","e","preventDefault","data","FormData","currentTarget","actualData","first_name","get","last_name","email","password","password_confirmation","test","res","console","log","token","setTimeout","message","handleVerifyOTP","otp","id","children","style","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","component","noValidate","sx","mt","p","maxWidth","margin","onSubmit","container","spacing","item","xs","required","fullWidth","name","label","InputProps","endAdornment","position","onClick","edge","variant","px","backgroundColor","fontWeight","severity","fontStyle","display","justifyContent","elevation","m","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/Project_2FA/authreactapp/src/Pages/Auth/UserReg.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, Grid, FormControlLabel, Checkbox, Button, Alert, TextField, InputAdornment, IconButton, Paper } from '@mui/material';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport { useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { useUserRegMutation, useVerifyOTPMutation } from '../../services/authApi';\r\nimport { storeToken } from '../../services/LocalStorage';\r\n\r\n\r\nconst UserReg = () => {\r\n  const Refresh = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const [authid, setAuthId] = useState(null)\r\n  const [error, setError] = useState({\r\n    status: false,\r\n    msg: '',\r\n    type: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const [userReg] = useUserRegMutation();\r\n  const [verifyOTP]= useVerifyOTPMutation();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handlePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\r\n  const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{6,}$/;\r\n\r\n  const handleSendOTP = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const actualData = {\r\n      first_name: data.get('first_name'),\r\n      last_name: data.get('last_name'),\r\n      email: data.get('email'),\r\n      password: data.get('password'),\r\n      password_confirmation: data.get('password_confirmation'),\r\n      \r\n    };\r\n\r\n    if (actualData.first_name && actualData.last_name && actualData.email && actualData.password && actualData.password_confirmation ) {\r\n      if (!emailRegex.test(actualData.email)) {\r\n        setError({ status: true, msg: \"Please enter a valid email address\", type: 'error' });\r\n        return;\r\n      }\r\n      if (!passwordRegex.test(actualData.password)) {\r\n        setError({ status: true, msg: \"Password must be at least 6 characters long and contain at least one special character.\", type: 'error' });\r\n        return;\r\n      }\r\n      if (actualData.password === actualData.password_confirmation) {\r\n        const res = await userReg(actualData);\r\n        console.log(res);\r\n        if (res.data.status === 'success') {\r\n          storeToken(res.data.token);\r\n          setAuthId(res.data.authid);\r\n          setTimeout(() => {\r\n            navigate('');\r\n          }, 3000);\r\n        }\r\n\r\n        if (res.data.status === 'failed') {\r\n          console.error('error during registration', error);\r\n          setError({ status: true, msg: res.data.message, type: 'error' });\r\n        }\r\n      }\r\n      else {\r\n        setError({ status: true, msg: \"Password and Confirm Password don't match!\", type: 'error' });\r\n      }\r\n    } else {\r\n      setError({ status: true, msg: 'All fields are required', type: 'error' });\r\n    }\r\n\r\n\r\n  };\r\n  const handleVerifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const actualData = {\r\n      otp: data.get('otp'),\r\n      id: authid // Include authid in the request\r\n    };\r\n  \r\n    if (actualData.otp && actualData.id) {\r\n      try {\r\n        const res = await verifyOTP(actualData);\r\n        console.log('Response from verifyOTP:', res); // Log the response for debugging\r\n        if (res && res.data && res.data.status === \"success\") {\r\n          setError({ status: true, msg: res.data.message, type: 'success' });\r\n        } else if (res && res.data && res.data.status === \"failed\") {\r\n          setError({ status: true, msg: res.data.message, type: 'error' });\r\n        } else {\r\n          setError({ status: true, msg: \"Unexpected response structure\", type: 'error' });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during OTP verification:', error); // Log the actual error for debugging\r\n        setError({ status: true, msg: \"Error occurred during OTP verification\", type: 'error' });\r\n      }\r\n    } else {\r\n      setError({ status: true, msg: \"OTP and authid are required\", type: 'error' });\r\n    }\r\n  };\r\n  \r\n\r\n  return <>\r\n    <h2 style={{ textAlign: 'center', color: 'navy' }}>Welcome!!!</h2>\r\n\r\n    <Box component=\"form\" noValidate sx={{ mt: 0, p: 1, maxWidth: '400px', margin: 'auto' }} id=\"reg-form\" onSubmit={handleSendOTP}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6}>\r\n          <TextField margin=\"normal\" required fullWidth id=\"first_name\" name=\"first_name\" label=\"First Name\" />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField margin=\"normal\" required fullWidth id=\"last_name\" name=\"last_name\" label=\"Last Name\" />\r\n        </Grid>\r\n      </Grid>\r\n      <TextField margin=\"normal\" required fullWidth id=\"email\" name=\"email\" label=\"Email Address\" />\r\n      <TextField\r\n        margin='normal' required fullWidth id='password' name='password' type={showPassword ? 'text' : 'password'} label='Password' InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position='end'>\r\n              <IconButton onClick={handlePasswordVisibility} edge='end'>\r\n                {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <TextField\r\n        margin='normal' required fullWidth id='password_confirmation' name='password_confirmation'  type='password' label='Confirm Password' />\r\n\r\n      <Box sx={{ textAlign: 'center', mt: 1 }}>\r\n        <Button type=\"submit\" variant=\"contained\" sx={{ mt: 1, px: 5, backgroundColor: 'white', color: 'navy', fontWeight: '550' }}>\r\n          get OTP\r\n        </Button>\r\n        {error.status ? <Alert severity={error.type}>{error.msg}</Alert> : ''}\r\n        <br /><br />\r\n        <NavLink onClick={Refresh} style={{ color: 'white', fontStyle: 'normal' }}>Already have an account?</NavLink>\r\n      </Box>\r\n      {error.status && <Alert severity={error.type} sx={{ textAlign: 'center' }}>{error.msg}</Alert>}\r\n    </Box>\r\n    <>\r\n          <Box component=\"form\" sx={{ p: 3, display: 'flex', justifyContent: 'center' }} noValidate id=\"verify-otp-form\" onSubmit={handleVerifyOTP}>\r\n            <Paper elevation={3} sx={{ p: 3 }}>\r\n              <TextField id=\"otp\" name=\"otp\" required fullWidth margin='normal' label='Enter OTP' />\r\n              <br />\r\n              <Box sx={{ m: 2, display: 'flex', justifyContent: 'center' }}>\r\n                <Button type='submit' variant='contained' color=\"info\">Verify</Button>\r\n              </Box>\r\n              {error.status ? <Alert severity={error.type}>{error.msg}</Alert> : ''}\r\n            </Paper>\r\n          </Box>\r\n        </>\r\n  </>\r\n};\r\n\r\nexport default UserReg;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function UserReg() {\r\n//   const [first_name, setFName] = useState('');\r\n//   const [last_name, setLName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [password_confirmation, setPasswordConfirmation] = useState('');\r\n//   const [otp, setOTP] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('/api/user/reg', { first_name,last_name, email, password, password_confirmation });\r\n//       const { otp } = response.data;\r\n//       setOTP(otp);\r\n//       setMessage('Please check your email for the OTP');\r\n//     } catch (error) {\r\n//       setMessage('Error registering user');\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   const handleVerifyOTP = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post('/api/verify-otp', { email, otp });\r\n//       setMessage('OTP verified successfully');\r\n//     } catch (error) {\r\n//       setMessage('Error verifying OTP');\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>User Registration</h2>\r\n//       <form onSubmit={handleRegister}>\r\n//         <label>First Name:</label>\r\n//         <input type=\"text\" value={first_name} onChange={(e) => setFName(e.target.value)} required />\r\n//         <label>Last Name:</label>\r\n//         <input type=\"text\" value={last_name} onChange={(e) => setFName(e.target.value)} required />\r\n//         <label>Email:</label>\r\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//         <label>Password:</label>\r\n//         <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n//         <label>Confirm Password:</label>\r\n//         <input type=\"password\" value={password} onChange={(e) => setPasswordConfirmation(e.target.value)} required />\r\n//         <button type=\"submit\">Register</button>\r\n//       </form>\r\n//       {otp && (\r\n//         <form onSubmit={handleVerifyOTP}>\r\n//           <label>Enter OTP:</label>\r\n//           <input type=\"text\" value={otp} onChange={(e) => setOTP(e.target.value)} required />\r\n//           <button type=\"submit\">Verify OTP</button>\r\n//         </form>\r\n//       )}\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UserReg;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}