{"ast":null,"code":"import CryptoJS from 'crypto-js';\nconst secretKey = 'hgfui67587hb87o$%jdhd289$^%que98';\nconst encryptData = data => {\n  return CryptoJS.AES.encrypt(data, secretKey).toString();\n};\nconst decryptData = cipherText => {\n  const bytes = CryptoJS.AES.decrypt(cipherText, secretKey);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\nconst storeToken = token => {\n  const encryptedToken = encryptData(token);\n  localStorage.setItem('token', encryptedToken);\n};\nconst getToken = () => {\n  const encryptedToken = localStorage.getItem('token');\n  if (!encryptedToken) return null;\n  return decryptData(encryptedToken);\n};\nconst removeToken = () => {\n  localStorage.removeItem('token');\n};\nconst storeAuthId = authid => {\n  const encryptedAuthId = encryptData(authid);\n  localStorage.setItem('authid', encryptedAuthId);\n};\nconst getAuthId = () => {\n  const encryptedAuthId = localStorage.getItem('authid');\n  if (!encryptedAuthId) return null;\n  return decryptData(encryptedAuthId);\n};\nconst removeAuthId = () => {\n  localStorage.removeItem('authid');\n};\nconst storeTempUserDetails = actualData => {\n  const encryptedData = encryptData(JSON.stringify(actualData));\n  localStorage.setItem('actualData', encryptedData);\n};\nconst getTempUserDetails = () => {\n  const encryptedData = localStorage.getItem('actualData');\n  if (!encryptedData) return null;\n  const decryptedData = decryptData(encryptedData);\n  return JSON.parse(decryptedData);\n};\nconst removeTempUserDetails = () => {\n  localStorage.removeItem('actualData');\n};\nexport { storeToken, getToken, removeToken, storeAuthId, getAuthId, removeAuthId, storeTempUserDetails, getTempUserDetails, removeTempUserDetails };","map":{"version":3,"names":["CryptoJS","secretKey","encryptData","data","AES","encrypt","toString","decryptData","cipherText","bytes","decrypt","enc","Utf8","storeToken","token","encryptedToken","localStorage","setItem","getToken","getItem","removeToken","removeItem","storeAuthId","authid","encryptedAuthId","getAuthId","removeAuthId","storeTempUserDetails","actualData","encryptedData","JSON","stringify","getTempUserDetails","decryptedData","parse","removeTempUserDetails"],"sources":["C:/Users/Daigy Sarma/Desktop/Project_2FA/authreactapp/src/services/LocalStorage.js"],"sourcesContent":["import CryptoJS from 'crypto-js';\r\n\r\nconst secretKey = 'hgfui67587hb87o$%jdhd289$^%que98';\r\n\r\nconst encryptData = (data) => {\r\n  return CryptoJS.AES.encrypt(data, secretKey).toString();\r\n};\r\n\r\nconst decryptData = (cipherText) => {\r\n  const bytes = CryptoJS.AES.decrypt(cipherText, secretKey);\r\n  return bytes.toString(CryptoJS.enc.Utf8);\r\n};\r\n\r\nconst storeToken = (token) => {\r\n  const encryptedToken = encryptData(token);\r\n  localStorage.setItem('token', encryptedToken);\r\n};\r\n\r\nconst getToken = () => {\r\n  const encryptedToken = localStorage.getItem('token');\r\n  if (!encryptedToken) return null;\r\n  return decryptData(encryptedToken);\r\n};\r\n\r\nconst removeToken = () => {\r\n  localStorage.removeItem('token');\r\n};\r\n\r\nconst storeAuthId = (authid) => {\r\n  const encryptedAuthId = encryptData(authid);\r\n  localStorage.setItem('authid', encryptedAuthId);\r\n};\r\n\r\nconst getAuthId = () => {\r\n  const encryptedAuthId = localStorage.getItem('authid');\r\n  if (!encryptedAuthId) return null;\r\n  return decryptData(encryptedAuthId);\r\n};\r\n\r\nconst removeAuthId = () => {\r\n  localStorage.removeItem('authid');\r\n};\r\n\r\nconst storeTempUserDetails = (actualData) => {\r\n  const encryptedData = encryptData(JSON.stringify(actualData));\r\n  localStorage.setItem('actualData', encryptedData);\r\n};\r\n\r\nconst getTempUserDetails = () => {\r\n  const encryptedData = localStorage.getItem('actualData');\r\n  if (!encryptedData) return null;\r\n  const decryptedData = decryptData(encryptedData);\r\n  return JSON.parse(decryptedData);\r\n};\r\n\r\nconst removeTempUserDetails = () => {\r\n  localStorage.removeItem('actualData');\r\n};\r\n\r\nexport { storeToken, getToken, removeToken, storeAuthId, getAuthId, removeAuthId, storeTempUserDetails, getTempUserDetails, removeTempUserDetails };\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAEhC,MAAMC,SAAS,GAAG,kCAAkC;AAEpD,MAAMC,WAAW,GAAIC,IAAI,IAAK;EAC5B,OAAOH,QAAQ,CAACI,GAAG,CAACC,OAAO,CAACF,IAAI,EAAEF,SAAS,CAAC,CAACK,QAAQ,CAAC,CAAC;AACzD,CAAC;AAED,MAAMC,WAAW,GAAIC,UAAU,IAAK;EAClC,MAAMC,KAAK,GAAGT,QAAQ,CAACI,GAAG,CAACM,OAAO,CAACF,UAAU,EAAEP,SAAS,CAAC;EACzD,OAAOQ,KAAK,CAACH,QAAQ,CAACN,QAAQ,CAACW,GAAG,CAACC,IAAI,CAAC;AAC1C,CAAC;AAED,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAMC,cAAc,GAAGb,WAAW,CAACY,KAAK,CAAC;EACzCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,cAAc,CAAC;AAC/C,CAAC;AAED,MAAMG,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMH,cAAc,GAAGC,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACpD,IAAI,CAACJ,cAAc,EAAE,OAAO,IAAI;EAChC,OAAOR,WAAW,CAACQ,cAAc,CAAC;AACpC,CAAC;AAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;EACxBJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;AAED,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAC9B,MAAMC,eAAe,GAAGtB,WAAW,CAACqB,MAAM,CAAC;EAC3CP,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEO,eAAe,CAAC;AACjD,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMD,eAAe,GAAGR,YAAY,CAACG,OAAO,CAAC,QAAQ,CAAC;EACtD,IAAI,CAACK,eAAe,EAAE,OAAO,IAAI;EACjC,OAAOjB,WAAW,CAACiB,eAAe,CAAC;AACrC,CAAC;AAED,MAAME,YAAY,GAAGA,CAAA,KAAM;EACzBV,YAAY,CAACK,UAAU,CAAC,QAAQ,CAAC;AACnC,CAAC;AAED,MAAMM,oBAAoB,GAAIC,UAAU,IAAK;EAC3C,MAAMC,aAAa,GAAG3B,WAAW,CAAC4B,IAAI,CAACC,SAAS,CAACH,UAAU,CAAC,CAAC;EAC7DZ,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEY,aAAa,CAAC;AACnD,CAAC;AAED,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMH,aAAa,GAAGb,YAAY,CAACG,OAAO,CAAC,YAAY,CAAC;EACxD,IAAI,CAACU,aAAa,EAAE,OAAO,IAAI;EAC/B,MAAMI,aAAa,GAAG1B,WAAW,CAACsB,aAAa,CAAC;EAChD,OAAOC,IAAI,CAACI,KAAK,CAACD,aAAa,CAAC;AAClC,CAAC;AAED,MAAME,qBAAqB,GAAGA,CAAA,KAAM;EAClCnB,YAAY,CAACK,UAAU,CAAC,YAAY,CAAC;AACvC,CAAC;AAED,SAASR,UAAU,EAAEK,QAAQ,EAAEE,WAAW,EAAEE,WAAW,EAAEG,SAAS,EAAEC,YAAY,EAAEC,oBAAoB,EAAEK,kBAAkB,EAAEG,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}