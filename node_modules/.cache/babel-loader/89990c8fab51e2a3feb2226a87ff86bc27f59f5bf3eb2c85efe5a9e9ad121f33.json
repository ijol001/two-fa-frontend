{"ast":null,"code":"import CryptoJS from 'crypto-js';\nconst secretKey = 'hjhfi567#HGGUY&^^*^GHVUYGIfuyqqyd8d7y1';\nconst encryptData = data => {\n  try {\n    const cipherText = CryptoJS.AES.encrypt(data, secretKey).toString();\n    return cipherText;\n  } catch (error) {\n    console.error('Error encrypting data:', error);\n    return null;\n  }\n};\nconst decryptData = cipherText => {\n  try {\n    const bytes = CryptoJS.AES.decrypt(cipherText, secretKey);\n    const originalText = bytes.toString(CryptoJS.enc.Utf8);\n    return originalText;\n  } catch (error) {\n    console.error('Error decrypting data:', error);\n    return null;\n  }\n};\nconst storeToken = token => {\n  const encryptedToken = encryptData(token);\n  if (encryptedToken) {\n    localStorage.setItem('token', encryptedToken);\n  }\n};\nconst getToken = () => {\n  const encryptedToken = localStorage.getItem('token');\n  if (!encryptedToken) return null;\n  return decryptData(encryptedToken);\n};\nconst removeToken = () => {\n  localStorage.removeItem('token');\n};\nconst storeAuthId = authid => {\n  const encryptedAuthId = encryptData(authid);\n  if (encryptedAuthId) {\n    localStorage.setItem('authid', encryptedAuthId);\n  }\n};\nconst getAuthId = () => {\n  const encryptedAuthId = localStorage.getItem('authid');\n  if (!encryptedAuthId) return null;\n  return decryptData(encryptedAuthId);\n};\nconst removeAuthId = () => {\n  localStorage.removeItem('authid');\n};\nconst storeTempUserDetails = actualData => {\n  const encryptedData = encryptData(JSON.stringify(actualData));\n  if (encryptedData) {\n    localStorage.setItem('actualData', encryptedData);\n  }\n};\nconst getTempUserDetails = () => {\n  const encryptedData = localStorage.getItem('actualData');\n  if (!encryptedData) return null;\n  const decryptedData = decryptData(encryptedData);\n  if (decryptedData) {\n    return JSON.parse(decryptedData);\n  }\n  return null;\n};\nconst removeTempUserDetails = () => {\n  localStorage.removeItem('actualData');\n};\nexport { storeToken, getToken, removeToken, storeAuthId, getAuthId, removeAuthId, storeTempUserDetails, getTempUserDetails, removeTempUserDetails };","map":{"version":3,"names":["CryptoJS","secretKey","encryptData","data","cipherText","AES","encrypt","toString","error","console","decryptData","bytes","decrypt","originalText","enc","Utf8","storeToken","token","encryptedToken","localStorage","setItem","getToken","getItem","removeToken","removeItem","storeAuthId","authid","encryptedAuthId","getAuthId","removeAuthId","storeTempUserDetails","actualData","encryptedData","JSON","stringify","getTempUserDetails","decryptedData","parse","removeTempUserDetails"],"sources":["D:/4th Sem projects/Project_2FA/authreactapp/src/services/LocalStorage.js"],"sourcesContent":["import CryptoJS from 'crypto-js';\r\n\r\nconst secretKey = 'hjhfi567#HGGUY&^^*^GHVUYGIfuyqqyd8d7y1';\r\n\r\nconst encryptData = (data) => {\r\n  try {\r\n    const cipherText = CryptoJS.AES.encrypt(data, secretKey).toString();\r\n    return cipherText;\r\n  } catch (error) {\r\n    console.error('Error encrypting data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst decryptData = (cipherText) => {\r\n  try {\r\n    const bytes = CryptoJS.AES.decrypt(cipherText, secretKey);\r\n    const originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n    return originalText;\r\n  } catch (error) {\r\n    console.error('Error decrypting data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst storeToken = (token) => {\r\n  const encryptedToken = encryptData(token);\r\n  if (encryptedToken) {\r\n    localStorage.setItem('token', encryptedToken);\r\n  }\r\n};\r\n\r\nconst getToken = () => {\r\n  const encryptedToken = localStorage.getItem('token');\r\n  if (!encryptedToken) return null;\r\n  return decryptData(encryptedToken);\r\n};\r\n\r\nconst removeToken = () => {\r\n  localStorage.removeItem('token');\r\n};\r\n\r\nconst storeAuthId = (authid) => {\r\n  const encryptedAuthId = encryptData(authid);\r\n  if (encryptedAuthId) {\r\n    localStorage.setItem('authid', encryptedAuthId);\r\n  }\r\n};\r\n\r\nconst getAuthId = () => {\r\n  const encryptedAuthId = localStorage.getItem('authid');\r\n  if (!encryptedAuthId) return null;\r\n  return decryptData(encryptedAuthId);\r\n};\r\n\r\nconst removeAuthId = () => {\r\n  localStorage.removeItem('authid');\r\n};\r\n\r\nconst storeTempUserDetails = (actualData) => {\r\n  const encryptedData = encryptData(JSON.stringify(actualData));\r\n  if (encryptedData) {\r\n    localStorage.setItem('actualData', encryptedData);\r\n  }\r\n};\r\n\r\nconst getTempUserDetails = () => {\r\n  const encryptedData = localStorage.getItem('actualData');\r\n  if (!encryptedData) return null;\r\n  const decryptedData = decryptData(encryptedData);\r\n  if (decryptedData) {\r\n    return JSON.parse(decryptedData);\r\n  }\r\n  return null;\r\n};\r\n\r\nconst removeTempUserDetails = () => {\r\n  localStorage.removeItem('actualData');\r\n};\r\n\r\nexport { storeToken, getToken, removeToken, storeAuthId, getAuthId, removeAuthId, storeTempUserDetails, getTempUserDetails, removeTempUserDetails };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}